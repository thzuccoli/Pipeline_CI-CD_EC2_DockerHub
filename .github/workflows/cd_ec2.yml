name: Deploy_EC2

on:
  workflow_call:            # execução na chamada da rotina go.yml
 
jobs:

  Deploy_EC2:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3      # arquivos estatico da nossa aplicação

    - name: Download a Build Artifact         # ação de salvar o arquivo compilado 
      uses: actions/download-artifact@v4.1.8
      with:
        name: programago       # informar qualquer nome relacionado a descrição da aplicação  
      
    - name: Deploy to Staging server             # step para conectar via ssh e realizar o deploy
      uses: easingthemes/ssh-deploy@main
      with:  
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}     # chave SSH para acesso
        REMOTE_HOST: ${{ secrets.REMOTE_HOST }}             # IP maquina que queremos realizar o deploy
        REMOTE_USER: ${{ secrets.REMOTE_USER }}             # Usuario para loguin referente ao acesso e deploy AWS
        TARGET: /home/${{ secrets.REMOTE_USER }}            # Diretorio que irá ser realizado o deploy no EC2
        EXCLUDE: "postgres-data"         # não enviar arquivos do banco de dados de testes, iremos testar a rotina, e não a aplicação

    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@v1.2.0
      with:
        host: ${{ secrets.REMOTE_HOST }}
        username: ${{ secrets.REMOTE_USER }}
        Key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: 22                                            # porta do acesso SSH
        script: |            # local onde iremos colocar nosso codigo (simbolo | significa script com varias linhas)
          export HOST=${{ secrets.DBHOST_RDS }}
          export USER=${{ secrets.DBUSER_RDS }} 
          export PASSWORD=${{ secrets.DBPASSWORD_RDS }}
          export DBNAME=${{ secrets.DBNAME_RDS }}
          export DBPORT=${{ secrets.DBPORT_RDS }}
          export PORT=8000
          chmod +x main
          nohup ./main &
        # export pega o valor na frente dele e cria uma variavel de ambiente (info para conexao no banco RDS)
        # ultimo export PORT=8000 significa a porta em que a aplicação irá executar, sendo que n precisa estar em secret devido a termos que passar ao cliente
        # comando para permissionamento da aplicação main
        # nohup comando para não finalizar a sessão  quando sair do ssh 
        # comando & para rodar em segundo plano 

  
